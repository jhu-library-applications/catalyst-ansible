# setup vars
environ:                "preprod" # dev || stage || preprod || prod
debugging:              true

# private vars
login_user_passphrase:  "{{ vault_login_user_passphrase }}"

# ruby vars
chruby_ruby_version:    "ruby-2.2.2"

# rails vars
rails_env:              "production"

# apache vars:
hostname:               "{{ app_name }}"
domainname:             "library.jhu.edu"

# passenger vars
 # TODO: adopt and move up
update_packages:        false

# database config vars
# catalyst_db
catalyst_db_name:       "catalyst_preprod"
catalyst_db_host:       "mysql.dev.mse.jhu.edu"
catalyst_db_user:       "{{ vault_catalyst_db_user }}"
catalyst_db_pass:       "{{ vault_catalyst_db_pass }}"
catalyst_db_port:       3306
# horizon_db
horizon_db_name:        "horizonstage"
horizon_db_host:        "horizontest.mse.jhu.edu"
horizon_db_user:        "{{ vault_horizon_db_user }}"
horizon_db_pass:        "{{ vault_horizon_db_pass }}"
horizon_db_port:        2025

# hip server vars
hip_host:               "hip-staging.library.jhu.edu"
horizon_ws_url:         "http://localhost:8080/ws" # default
borrower_ws_username:   "{{ vault_borrower_ws_username }}"
borrower_ws_password:   "{{ vault_borrower_ws_password }}"
force_default_jhed:     "{{ vault_force_default_jhed }}"

# borrow_direct vars
borrow_direct_host:     "borrow-direct.relaisd2d.com"

# NOTE: we could test against prod by using catsolrreplica instead of catsolr04
# this would necessitate adding the IP of catalyst-preprod to catsolrreplica's firewall
# this may not be a worthwhile endeavor, however, as our understanding is that both
# catsolrreplica and catsolr04 both follow catsolr master. at some point,
# it may be edifying to retest this assumption by checking the propagation of
# a changed record in master. perhaps not today, however...
# solr vars
solr_url:               "http://catsolr04.mse.jhu.edu:8080/solr/catalyst_dev1"

# jetty vars
jetty_base:             "/opt/jetty"
jetty_user:             "jetty"
jetty_group:            "{{ jetty_user }}"
jetty_port:             8080

# firewalld vars:
firewalld_ipsets:
  - name: jetty_whitelist
    ips:
      - "{{ findit_ip_test }}"
      - "{{ findit_ip_prod }}"
      - "{{ nagios_ip }}"

# BanTheMan!
bantheman_configs: []
