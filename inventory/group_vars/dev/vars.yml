# setup vars
environ:                "dev" # dev || test || stage || prod
debugging:              true

# private vars
login_user_passphrase:  "{{ vault_login_user_passphrase }}"

# deployment vars
app_branch:             "develop"

# SSH vars
login_group:            "{{ lookup('ini', 'login_group section=dev file=~/.ansible.ini default=' + login_user ) }}"
login_password:         "{{ lookup('ini', 'login_password section=dev file=~/.ansible.ini') }}"
login_user_grant_sudo:  true

# ruby vars
chruby_ruby_version:    "ruby-2.6.6"
services_needs_jruby:    true

# apache vars:
hostname:               "{{ app_name }}-{{ environ }}"
domainname:             "test"

ssl_self_sign_cert:               true

# database config vars
# catalyst_db
catalyst_db_name:       "catalyst_{{ environ }}"
catalyst_db_host:       "mysql.dev.mse.jhu.edu"
catalyst_db_user:       "{{ vault_catalyst_db_user }}"
catalyst_db_pass:       "{{ vault_catalyst_db_pass }}"
catalyst_db_port:       3306
# horizon_db
horizon_db_name:        "horizonstage"
horizon_db_host:        "horizontest.mse.jhu.edu"
horizon_db_user:        "{{ vault_horizon_db_user }}"
horizon_db_pass:        "{{ vault_horizon_db_pass }}"
horizon_db_port:        2025

# hip server vars
hip_host:               "hip-staging.library.jhu.edu"
horizon_ws_url:         "http://localhost:8080/ws" # default
borrower_ws_username:   "{{ vault_borrower_ws_username }}"
borrower_ws_password:   "{{ vault_borrower_ws_password }}"
force_default_jhed:     "{{ vault_force_default_jhed }}"

# borrow_direct vars
borrow_direct_host:     "bdtest.relaisd2d.com"

# Flipper auth vars
flipper_username:       "{{ vault_flipper_username }}"
flipper_password:       "{{ vault_flipper_password }}"

# Rollbar access token vars
rollbar_access_token:   "{{ vault_rollbar_access_token }}"
rollbar_env:            "test"

# Sentry.io
sentry_dsn:             "{{ vault_sentry_dsn }}"
sentry_env:             "test"

# Google API for retrieving book covers
google_books_api_key:   "{{ vault_google_books_api_key }}"


# AppSignal

appsignal_push_api_key: ""

# catalyst/findit vars.
# catalyst_base_url is a callback used by findit. It has to be a server that findit can access
catalyst_base_url:      "https://catalyst-stage.library.jhu.edu"
findit_base_url:        "https://findit-test.library.jhu.edu"

# solr vars
# FIXME: figure out a more elegant solution than this...
solr_main_ip:         "10.11.12.102"
solr_replica_ip:          "10.11.12.103"
# NOTE: this is the existing url we are still using until our ansibilization is complete
solr_url:               "http://catsolrreplica-test.library.jhu.edu:8983/solr/catalyst"
# FIXME: avoid hard-coding the solr_url
# FIXME: solr_port & solr_cores vars are not available to catalyst, only catsolr
# NOTE: for non-replication:
# solr_url:               "http://{{ solr_main_ip }}:8983/solr/catalyst" # :{{ solr_port }}/solr/{{ solr_cores[0] }}"
# NOTE: for replication:
# solr_url:               "http://{{ solr_replica_ip }}:8983/solr/catalyst"

# traject vars
# NOTE: the value of solr_replicate_master will determine whether the value of
# solr_url_to_index will be used for SOLR_REPLICATE_MASTER_URL (true) or SOLR_URL (false)
# ALSO NOTE: solr replication is not currently working with our dev configuration
solr_replicate_master:  true
solr_url_to_index:      "http://{{ solr_main_ip }}:{{ solr_port }}/solr/{{ solr_cores[0] }}"
# NOTE: only used if solr_replicate_master is true
solr_url_replica:         "http://{{ solr_replica_ip }}:{{ solr_port }}/solr/{{ solr_cores[0] }}"
# 23 30 : every night at 11:30PM
# 0-23; apparently in UTC
traject_cron_minute:    0
traject_cron_hour:      0
# NOTE: optional and mutually exclusive (only or (first &/or last))
# only_bib:               391566
first_bib:              6270400
last_bib:               6331099
sanity_check_count:       10000
# traject_cron_action:    "create" # create | remove | none (if absent, create is default)

# pull-reserves vars
pull_reserves_cron_minute:  0
pull_reserves_cron_hour:    0

# ip vars
findit_ip:                  "10.11.12.102" # local VM

sfx_base_url: "https://sfx-stage.library.jhu.edu/sfxlcl41"
