# setup vars
environ:                "prod" # dev || stage || preprod || prod
debugging:              false

# private vars
login_user_passphrase:  "{{ vault_login_user_passphrase }}"

# deployment vars
app_branch:             "main"

# ruby vars
chruby_ruby_version:    "ruby-2.6.6"

# rails vars
rails_env:              "production"

# apache vars:
hostname:               "{{ app_name }}"
domainname:             "library.jhu.edu"

# passenger vars
 # TODO: adopt and move up
update_packages:        false

# database config vars
# catalyst_db
catalyst_db_name:       "blacklight_prod"
catalyst_db_host:       "mysql.mse.jhu.edu"
catalyst_db_user:       "{{ vault_catalyst_db_user }}"
catalyst_db_pass:       "{{ vault_catalyst_db_pass }}"
catalyst_db_port:       3306
# horizon_db
horizon_db_name:        "horizon"
horizon_db_host:        "horizon.mse.jhu.edu"
horizon_db_user:        "{{ vault_horizon_db_user }}"
horizon_db_pass:        "{{ vault_horizon_db_pass }}"
horizon_db_port:        2025

# hip server vars
hip_host:               "hip.library.jhu.edu"
horizon_ws_url:         "http://localhost:8080/ws" # default
borrower_ws_username:   "{{ vault_borrower_ws_username }}"
borrower_ws_password:   "{{ vault_borrower_ws_password }}"
force_default_jhed:     "{{ vault_force_default_jhed }}"

# borrow_direct vars
borrow_direct_host:     "bd.relaisd2d.com"

# Flipper auth vars
flipper_username:       "{{ vault_flipper_username }}"
flipper_password:       "{{ vault_flipper_password }}"

# Rollbar access token vars
rollbar_access_token:   "{{ vault_rollbar_access_token }}"
rollbar_env:            "production"

# Sentry.io
sentry_dsn:             "{{ vault_sentry_dsn }}"
sentry_env:             "production"

# catalyst/findit vars
# catalyst_base_url is a callback used by findit. It has to be a server that findit can access
catalyst_base_url:      "https://catalyst.library.jhu.edu"
findit_base_url:        "https://findit.library.jhu.edu"

# solr vars # overrides one in services.yml
solr_url:               "{{ vault_solr_url }}"

# ip vars
findit_ip:              "{{ findit_ip_prod }}"

# firewalld vars:
firewalld_ipsets:
  - name: jetty_whitelist
    ips:
      - "{{ findit_ip_prod }}"
      - "{{ nagios_ip }}"
firewalld_richrules:
  # NOTE: differs from default in that whitelisted requests are not logged
  - rule: "{{ jetty_accept_rule_nolog }}"
    state: enabled
  # NOTE: this does not differ from default, but since we are overriding the accept rule, we must also specify the reject rule
  - rule: "{{ jetty_reject_rule }}"
    state: enabled

# BanTheMan!
bantheman_configs: []
